// Code generated by sqlc. DO NOT EDIT.
// source: rarity.sql

package sqlc

import (
	"context"
)

const createRarity = `-- name: CreateRarity :one
INSERT INTO public.rarity (
  name
) VALUES (
  $1
)
RETURNING id, name, created_at, updated_at, deleted_at
`

func (q *Queries) CreateRarity(ctx context.Context, name string) (Rarity, error) {
	row := q.db.QueryRowContext(ctx, createRarity, name)
	var i Rarity
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const getRarityIdByName = `-- name: GetRarityIdByName :one
SELECT id FROM public.rarity
WHERE name = $1 LIMIT 1
`

func (q *Queries) GetRarityIdByName(ctx context.Context, name string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getRarityIdByName, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}
